<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Atom.ErrorReporting</name>
    </assembly>
    <members>
        <member name="T:Atom.ErrorReporting.Dialogs.IErrorReportDialog">
            <summary>
            Provides a mechanism for showing a report about an <see cref="T:Atom.ErrorReporting.IError"/> to the user.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Dialogs.IErrorReportDialog.Show(Atom.ErrorReporting.IError)">
            <summary>
            Shows this IErrorReportDialog.
            </summary>
            <param name="error">
            The <see cref="T:Atom.ErrorReporting.IError"/> to report to the user.
            </param>
        </member>
        <member name="T:Atom.ErrorReporting.Dialogs.IErrorReportDialogFactory">
            <summary>
            Provides a mechanism for creating instances fo the <see cref="T:Atom.ErrorReporting.Dialogs.IErrorReportDialog"/> interface.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Dialogs.IErrorReportDialogFactory.Build">
            <summary>
            Creates and then returns a new concrete instance of the IErrorReportDialog interface.
            </summary>
            <returns>
            The newly created IErrorReportDialog.
            </returns>
        </member>
        <member name="T:Atom.ErrorReporting.ErrorResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.ErrorResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.ErrorResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.ErrorResources.ReportSent">
            <summary>
              Looks up a localized string similar to The error report has been sent..
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.ErrorResources.UnhandledException">
            <summary>
              Looks up a localized string similar to Unhandled Exception.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.ErrorResources.UnhandledFatalException">
            <summary>
              Looks up a localized string similar to Unhandled Fatal Exception.
            </summary>
        </member>
        <member name="T:Atom.ErrorReporting.Errors.ExceptionError">
            <summary>
            Represents an IError that relates to a specific <see cref="P:Atom.ErrorReporting.Errors.ExceptionError.Exception"/>.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.Errors.ExceptionError.Name">
            <summary>
            Gets the type-name of the exception.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.Errors.ExceptionError.Description">
            <summary>
            Gets the message of the Exception.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.Errors.ExceptionError.IsFatal">
            <summary>
            Get a value indicating whether the exception was fatal
            and required the application to shutdown.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.Errors.ExceptionError.Exception">
            <summary>
            Gets the actual <see cref="P:Atom.ErrorReporting.Errors.ExceptionError.Exception"/> object.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Errors.ExceptionError.#ctor(System.Exception,System.Boolean)">
            <summary>
            Initializes a new instance of the ExceptionError class.
            </summary>
            <param name="exception">
            The actual <see cref="P:Atom.ErrorReporting.Errors.ExceptionError.Exception"/> object.
            </param>
            <param name="isFatal">
            States whether the exception was fatal
            and requires the application to shutdown.
            </param>
        </member>
        <member name="M:Atom.ErrorReporting.Errors.ExceptionError.ToString">
            <summary>
            Creates and returns a string representation of the current ExceptionError.
            </summary>
            <returns>
            A string representation of the current error.
            </returns>
        </member>
        <member name="F:Atom.ErrorReporting.Errors.ExceptionError.exception">
            <summary>
            The actual <see cref="P:Atom.ErrorReporting.Errors.ExceptionError.Exception"/> object.
            </summary>
        </member>
        <member name="F:Atom.ErrorReporting.Errors.ExceptionError.isFatal">
            <summary>
            States whether the exception was fatal and requires the application to shutdown.
            </summary>
        </member>
        <member name="T:Atom.ErrorReporting.Errors.ExceptionErrorFactory">
            <summary>
            Implements an <see cref="T:Atom.ErrorReporting.IExceptionErrorFactory"/> that creates <see cref="T:Atom.ErrorReporting.Errors.ExceptionError"/> objects
            given an <see cref="T:System.Exception"/>.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Errors.ExceptionErrorFactory.CreateError(System.Exception,System.Boolean)">
            <summary>
            Creates a concrete instance of the <see cref="T:Atom.ErrorReporting.IExceptionError"/> class.
            </summary>
            <param name="exception">
            The exception that was thrown.
            </param>
            <param name="isFatal">
            States whether the exception was fatal and requires the application to shutdown.
            </param>
            <returns>
            The newly created concrete instance of the IExceptionError interface.
            </returns>
        </member>
        <member name="T:Atom.ErrorReporting.Formatters.MailBodyErrorFormatter">
            <summary>
            Implements the default <see cref="T:Atom.ErrorReporting.IErrorMessageFormatter"/> responsible for creating
            the error message shown in an e-mail.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Formatters.MailBodyErrorFormatter.Format(Atom.ErrorReporting.IError)">
            <summary>
            Formats and then returns the error message for the given IError.
            </summary>
            <param name="error">
            The error whose error message should be formated.
            </param>
            <returns>
            The formated error message.
            </returns>
        </member>
        <member name="M:Atom.ErrorReporting.Formatters.MailBodyErrorFormatter.GetBody(Atom.ErrorReporting.IExceptionError)">
            <summary>
            Gets the body of the e-mail.
            </summary>
            <param name="exceptionError">
            The exception error that was reported.
            </param>
            <returns>
            The body of the e-mail.
            </returns>
        </member>
        <member name="M:Atom.ErrorReporting.Formatters.MailBodyErrorFormatter.AppendException(System.Exception,System.Text.StringBuilder)">
            <summary>
            Appends information about the specified exception.
            </summary>
            <param name="exception">
            The exception to append.
            </param>
            <param name="sb">
            The StringBuilder to append to.
            </param>
        </member>
        <member name="T:Atom.ErrorReporting.Formatters.MultiErrorMessageFormatter">
            <summary>
            Implements an <see cref="T:Atom.ErrorReporting.IErrorMessageFormatter"/> that consists of multiple other IErrorMessageFormatters
            whose messages are appended in-order.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.Formatters.MultiErrorMessageFormatter.Separator">
            <summary>
            Gets or sets the string that is inserted between the different messages
            of the IErrorMessageFormatters this MultiErrorMessageFormatter contains.
            </summary>
            <value>
            The default value is "\n". Allowed to be null.
            </value>
        </member>
        <member name="M:Atom.ErrorReporting.Formatters.MultiErrorMessageFormatter.#ctor">
            <summary>
            Initializes a new instance of the MultiErrorMessageFormatter class.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Formatters.MultiErrorMessageFormatter.Format(Atom.ErrorReporting.IError)">
            <summary>
            Formats and then returns the error message for the given IError.
            </summary>
            <param name="error">
            The error whose error message should be formated.
            </param>
            <returns>
            The formated error message.
            </returns>
        </member>
        <member name="T:Atom.ErrorReporting.Formatters.TextFileErrorMessageFormatter">
            <summary>
            Implements an <see cref="T:Atom.ErrorReporting.IErrorMessageFormatter"/> that returns the content of a text file.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Formatters.TextFileErrorMessageFormatter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TextFileErrorMessageFormatter class.
            </summary>
            <param name="fileName">
            The full name of the file to read.
            </param>
        </member>
        <member name="M:Atom.ErrorReporting.Formatters.TextFileErrorMessageFormatter.Format(Atom.ErrorReporting.IError)">
            <summary>
            Formats and then returns the error message for the given IError.
            </summary>
            <param name="error">
            The error whose error message should be formated.
            </param>
            <returns>
            The formated error message.
            </returns>
        </member>
        <member name="F:Atom.ErrorReporting.Formatters.TextFileErrorMessageFormatter.fileName">
            <summary>
            The full name of the file to read.
            </summary>
        </member>
        <member name="T:Atom.ErrorReporting.Formatters.TextLineErrorMessageFormatter">
            <summary>
            Represents an <see cref="T:Atom.ErrorReporting.IErrorMessageFormatter"/> that always returns the same string.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.Formatters.TextLineErrorMessageFormatter.Text">
            <summary>
            Gets or sets the text this TextLineErrorMessageFormatter returns.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Formatters.TextLineErrorMessageFormatter.#ctor">
            <summary>
            Initializes a new instance of the TextLineErrorMessageFormatter class.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Formatters.TextLineErrorMessageFormatter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TextLineErrorMessageFormatter class.
            </summary>
            <param name="text">
            The text the new TextLineErrorMessageFormatter should return.
            </param>
        </member>
        <member name="M:Atom.ErrorReporting.Formatters.TextLineErrorMessageFormatter.Format(Atom.ErrorReporting.IError)">
            <summary>
            Formats and then returns the error message for the given IError.
            </summary>
            <param name="error">
            The error whose error message should be formated.
            </param>
            <returns>
            The formated error message.
            </returns>
        </member>
        <member name="F:Atom.ErrorReporting.Formatters.TextLineErrorMessageFormatter.text">
            <summary>
            Represents the storage field of the <see cref="P:Atom.ErrorReporting.Formatters.TextLineErrorMessageFormatter.Text"/> property.
            </summary>
        </member>
        <member name="T:Atom.ErrorReporting.Hooks.UnhandledAppDomainExceptionHook">
            <summary>
            Implements an <see cref="T:Atom.ErrorReporting.IErrorHook"/> that hooks onto <see cref="E:System.AppDomain.UnhandledException"/> to
            catch exceptions.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Hooks.UnhandledAppDomainExceptionHook.#ctor(Atom.ErrorReporting.IExceptionErrorFactory,Atom.ErrorReporting.IErrorReporter)">
            <summary>
            Initializes a new instance of the UnhandledAppDomainExceptionHook class,
            that hooks the current AppDomain.
            </summary>
            <param name="errorFactory">
            The IExceptionErrorFactory used to create IExceptionErrors given an Exception.
            </param>
            <param name="errorReporter">
            The IErrorReporter to which IExceptionErrors are passed.
            </param>
        </member>
        <member name="M:Atom.ErrorReporting.Hooks.UnhandledAppDomainExceptionHook.#ctor(System.AppDomain,Atom.ErrorReporting.IExceptionErrorFactory,Atom.ErrorReporting.IErrorReporter)">
            <summary>
            Initializes a new instance of the UnhandledAppDomainExceptionHook class.
            </summary>
            <param name="appDomain">
            The AppDomain to hook on.
            </param>
            <param name="errorFactory">
            The IExceptionErrorFactory used to create IExceptionErrors given an Exception.
            </param>
            <param name="errorReporter">
            The IErrorReporter to which IExceptionErrors are passed.
            </param>
        </member>
        <member name="M:Atom.ErrorReporting.Hooks.UnhandledAppDomainExceptionHook.Hook">
            <summary>
            Hooks this IErrorHook.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Hooks.UnhandledAppDomainExceptionHook.Unhook">
            <summary>
            Unhooks this IErrorHook.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Hooks.UnhandledAppDomainExceptionHook.OnUnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            Called when an exception has occurred in the AppDomain this UnhandledAppDomainExceptionHook
            is hooked on.
            </summary>
            <param name="sender">
            The sender of the event.
            </param>
            <param name="e">
            The <see cref="T:System.UnhandledExceptionEventArgs"/> that contain the event data.
            </param>
        </member>
        <member name="M:Atom.ErrorReporting.Hooks.UnhandledAppDomainExceptionHook.ReportError(Atom.ErrorReporting.IExceptionError)">
            <summary>
            Reports the specified IExceptionError.
            </summary>
            <param name="error">
            The IExceptionError that has occurred.
            </param>
        </member>
        <member name="M:Atom.ErrorReporting.Hooks.UnhandledAppDomainExceptionHook.CreateError(System.UnhandledExceptionEventArgs)">
            <summary>
            Creates an IExceptionError object given the event data.
            </summary>
            <param name="e">
            The <see cref="T:System.UnhandledExceptionEventArgs"/> that contain the event data.
            </param>
            <returns>
            The newly created IExceptionError.
            </returns>
        </member>
        <member name="F:Atom.ErrorReporting.Hooks.UnhandledAppDomainExceptionHook.appDomain">
            <summary>
            The AppDomain this UnhandledAppDomainExceptionHook hooks on.
            </summary>
        </member>
        <member name="F:Atom.ErrorReporting.Hooks.UnhandledAppDomainExceptionHook.errorFactory">
            <summary>
            The IExceptionErrorFactory used to create IExceptionErrors given an Exception.
            </summary>
        </member>
        <member name="F:Atom.ErrorReporting.Hooks.UnhandledAppDomainExceptionHook.errorReporter">
            <summary>
            The IErrorReporter to which IExceptionErrors are passed.
            </summary>
        </member>
        <member name="T:Atom.ErrorReporting.IError">
            <summary>
            Represents a reportable error.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.IError.Name">
            <summary>
            Gets the name of this IError.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.IError.Description">
            <summary>
            Gets a description of this IError.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.IError.IsFatal">
            <summary>
            Gets a value indicating whether this IError is fatal,
            and requires the application to shut-down.
            </summary>
        </member>
        <member name="T:Atom.ErrorReporting.IErrorFactory">
            <summary>
            Provides a mechanism for creating concrete instances of the <see cref="T:Atom.ErrorReporting.IError"/> interface.
            </summary>
        </member>
        <member name="T:Atom.ErrorReporting.IErrorHook">
            <summary>
            Represents a mechanism that hooks into some other mechanism
            that listens to IErrors.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.IErrorHook.Hook">
            <summary>
            Hooks this IErrorHook.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.IErrorHook.Unhook">
            <summary>
            Unhooks this IErrorHook.
            </summary>
        </member>
        <member name="T:Atom.ErrorReporting.IErrorMessageFormatter">
            <summary>
            Provides a mechanism for formatting an <see cref="T:Atom.ErrorReporting.IError"/>
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.IErrorMessageFormatter.Format(Atom.ErrorReporting.IError)">
            <summary>
            Formats and then returns the error message for the given IError.
            </summary>
            <param name="error">
            The error whose error message should be formated.
            </param>
            <returns>
            The formated error message.
            </returns>
        </member>
        <member name="T:Atom.ErrorReporting.IErrorReporter">
            <summary>
            Provides a mechanism for reporting an <see cref="T:Atom.ErrorReporting.IError"/>.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.IErrorReporter.Report(Atom.ErrorReporting.IError)">
            <summary>
            Notifies this IErrorReporter that the specified IError has occurred.
            </summary>
            <param name="error">
            The error to report.
            </param>
        </member>
        <member name="T:Atom.ErrorReporting.IExceptionError">
            <summary>
            Represents an <see cref="T:Atom.ErrorReporting.IError"/> that relates to an <see cref="P:Atom.ErrorReporting.IExceptionError.Exception"/>.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.IExceptionError.Exception">
            <summary>
            Gets the <see cref="P:Atom.ErrorReporting.IExceptionError.Exception"/> this <see cref="T:Atom.ErrorReporting.IExceptionError"/> relates to.
            </summary>
        </member>
        <member name="T:Atom.ErrorReporting.IExceptionErrorFactory">
            <summary>
            Provides a mechanism for creating concrete instances of the <see cref="T:Atom.ErrorReporting.IExceptionError"/>
            given an <see cref="T:System.Exception"/>.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.IExceptionErrorFactory.CreateError(System.Exception,System.Boolean)">
            <summary>
            Creates a concrete instance of the <see cref="T:Atom.ErrorReporting.IExceptionError"/> class.
            </summary>
            <param name="exception">
            The exception that was thrown.
            </param>
            <param name="isFatal">
            States whether the exception was fatal and requires the application to shutdown.
            </param>
            <returns>
            The newly created concrete instance of the IExceptionError interface.
            </returns>
        </member>
        <member name="T:Atom.ErrorReporting.IShutdownLogic">
            <summary>
            Provides a mechanism for shutting down the application after
            a fatal error.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.IShutdownLogic.DoShutdown">
            <summary>
            Executes this IShutdownLogic.
            </summary>
        </member>
        <member name="T:Atom.ErrorReporting.Reporters.BaseMailErrorReporter">
            <summary>
            Represents a base implementation of the <see cref="T:Atom.ErrorReporting.IErrorReporter"/> interface that
            reports errors by sending an e-mail.
            </summary>
        </member>
        <member name="P:Atom.ErrorReporting.Reporters.BaseMailErrorReporter.MailModifier">
            <summary>
            Gets or sets the optional <see cref="T:Atom.Mail.Modifiers.IMailMessageModifier"/> that is applied to an
            <see cref="T:Atom.Mail.IMailMessage"/> before it is send.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Reporters.BaseMailErrorReporter.#ctor(System.String,System.String,Atom.Mail.IMailSender)">
            <summary>
            Initializes a new instance of the BaseMailErrorReporter class.
            </summary>
            <param name="applicationName">
            The name of the application.
            </param>
            <param name="recipient">
            The e-mail address to which mail should be send to.
            </param>
            <param name="mailSender">
            The IMailSender that should be used to actually send the e-mail.
            </param>
        </member>
        <member name="M:Atom.ErrorReporting.Reporters.BaseMailErrorReporter.Report(Atom.ErrorReporting.IError)">
            <summary>
            Notifies this IErrorReporter that the specified IError has occurred.
            </summary>
            <param name="error">
            The error to report.
            </param>
        </member>
        <member name="M:Atom.ErrorReporting.Reporters.BaseMailErrorReporter.GetMailMessage(Atom.ErrorReporting.IError)">
            <summary>
            Gets the <see cref="T:Atom.Mail.IMailMessage"/> this <see cref="T:Atom.ErrorReporting.Reporters.BaseMailErrorReporter"/> will send
            in response to the specified <see cref="T:Atom.ErrorReporting.IError"/>.
            </summary>
            <param name="error">
            The error to report.
            </param>
            <returns>
            The ready-to-be send MailMessage.
            </returns>
        </member>
        <member name="M:Atom.ErrorReporting.Reporters.BaseMailErrorReporter.GetTo(Atom.ErrorReporting.IError)">
            <summary>
            Gets the address to which the e-mail is send.
            </summary>
            <param name="error">
            The error that was reported.
            </param>
            <returns>
            The address to which the e-mail is send.
            </returns>
        </member>
        <member name="M:Atom.ErrorReporting.Reporters.BaseMailErrorReporter.GetSubject(Atom.ErrorReporting.IError)">
            <summary>
            Gets the subject of the e-mail.
            </summary>
            <param name="error">
            The error that was reported.
            </param>
            <returns>
            The subject of the e-mail.
            </returns>
        </member>
        <member name="M:Atom.ErrorReporting.Reporters.BaseMailErrorReporter.GetBody(Atom.ErrorReporting.IError)">
            <summary>
            Gets the body of the e-mail.
            </summary>
            <param name="error">
            The error that was reported.
            </param>
            <returns>
            The body of the e-mail.
            </returns>
        </member>
        <member name="M:Atom.ErrorReporting.Reporters.BaseMailErrorReporter.OnSendFailed(Atom.Mail.MailException)">
            <summary>
            Called when an exception has occurred while the mail was sent.
            </summary>
            <param name="exc">
            The exception that has occurred.
            </param>
            <exception cref="T:Atom.Mail.MailException">
            By default the exception is rethrown.
            </exception>
        </member>
        <member name="F:Atom.ErrorReporting.Reporters.BaseMailErrorReporter.applicationName">
            <summary>
            The name of the application. Is shown in the e-mail subject.
            </summary>
        </member>
        <member name="F:Atom.ErrorReporting.Reporters.BaseMailErrorReporter.to">
            <summary>
            The e-mail address to which mail should be send to.
            </summary>
        </member>
        <member name="F:Atom.ErrorReporting.Reporters.BaseMailErrorReporter.mailSender">
            <summary>
            The IMailSender that should be used to actually send the e-mail.
            </summary>
        </member>
        <member name="T:Atom.ErrorReporting.Reporters.LogErrorReporter">
            <summary>
            Implements an <see cref="T:Atom.ErrorReporting.IErrorReporter"/> that writes the full exception details to
            an <see cref="T:Atom.Diagnostics.ILog"/>.
            </summary>
            <remarks>
            The ToString method of an <see cref="T:Atom.ErrorReporting.IError"/> is invoked to receive the full error description.
            </remarks>
        </member>
        <member name="M:Atom.ErrorReporting.Reporters.LogErrorReporter.#ctor(Atom.Diagnostics.ILog)">
            <summary>
            Initializes a new instance of the LogErrorReporter class.
            </summary>
            <param name="log">
            The ILog to which <see cref="T:Atom.ErrorReporting.IError"/>s should be written.
            </param>
        </member>
        <member name="M:Atom.ErrorReporting.Reporters.LogErrorReporter.Report(Atom.ErrorReporting.IError)">
            <summary>
            Notifies this IErrorReporter that the specified IError has occurred.
            </summary>
            <param name="error">
            The error to report.
            </param>
        </member>
        <member name="F:Atom.ErrorReporting.Reporters.LogErrorReporter.log">
            <summary>
            The ILog to which <see cref="T:Atom.ErrorReporting.IError"/>s should be written.
            </summary>
        </member>
        <member name="T:Atom.ErrorReporting.Reporters.MailErrorReporter">
            <summary>
            Implements an <see cref="T:Atom.ErrorReporting.IErrorReporter"/> that opens the default mail-client
            with the error message.
            </summary>
        </member>
        <member name="M:Atom.ErrorReporting.Reporters.MailErrorReporter.#ctor(System.String,System.String,Atom.ErrorReporting.IErrorMessageFormatter,Atom.Mail.IMailSender)">
            <summary>
            Initializes a new instance of the MailErrorReporter class.
            </summary>
            <param name="applicationName">
            The name of the application.
            </param>
            <param name="recipient">
            The e-mail address to which mail should be send to.
            </param>
            <param name="bodyFormatter">
            The IErrorMessageFormatter responsible for creating the body text the e-mail will contain.
            </param>
            <param name="mailSender">
            The IMailSender that should be used to actually send the e-mail.
            </param>
        </member>
        <member name="M:Atom.ErrorReporting.Reporters.MailErrorReporter.GetBody(Atom.ErrorReporting.IError)">
            <summary>
            Gets the body of the e-mail.
            </summary>
            <param name="error">
            The error that was reported.
            </param>
            <returns>
            The body of the e-mail.
            </returns>
        </member>
        <member name="F:Atom.ErrorReporting.Reporters.MailErrorReporter.bodyFormatter">
            <summary>
            The IErrorMessageFormatter responsible for creating the body text the e-mail will contain.
            </summary>
        </member>
    </members>
</doc>
