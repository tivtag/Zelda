<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Atom.AutoUpdate</name>
    </assembly>
    <members>
        <member name="T:Atom.AutoUpdate.Downloader">
            <summary>
            Implements mechanisms to download files from the web.
            </summary>
        </member>
        <member name="E:Atom.AutoUpdate.Downloader.AsyncDataDownloadCompleted">
            <summary>
            Occurs when an asynchronous data download operation completes.
            </summary>
        </member>
        <member name="E:Atom.AutoUpdate.Downloader.AsyncDownloadCompleted">
            <summary>
            Occurs when an asynchronous file download operation completes.
            </summary>
        </member>
        <member name="E:Atom.AutoUpdate.Downloader.AsyncStringDownloadCompleted">
            <summary>
            Occurs when an asynchronous string download operation completes.
            </summary>
        </member>
        <member name="E:Atom.AutoUpdate.Downloader.AsyncDownloadProgressChanged">
            <summary>
            Occurs when an asynchronous download operation successfully transfers some
            or all of the data.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.Downloader.#ctor">
            <summary>
            Initializes a new instance of the Downloader class.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.Downloader.DownloadData(System.String)">
            <summary>
            Downloads the data found at the given address.
            </summary>
            <param name="address">
            The uri of the data to download.
            </param>
            <returns>
            The downloaded data.
            </returns>
        </member>
        <member name="M:Atom.AutoUpdate.Downloader.DownloadString(System.String)">
            <summary>
            Downloads the string found at the given address.
            </summary>
            <param name="address">
            The uri of the data to download.
            </param>
            <returns>
            The downloaded string.
            </returns>
        </member>
        <member name="M:Atom.AutoUpdate.Downloader.DownloadFile(System.String,System.String)">
            <summary>
            Downloads the data found at the given address
            and saves it in a local file.
            </summary>
            <param name="address">
            The uri of the file to download.
            </param>
            <param name="localFileName">
            The name of the local file the downloaded file should be saved as.
            </param>
        </member>
        <member name="M:Atom.AutoUpdate.Downloader.DownloadFileAsync(System.String,System.String)">
            <summary>
            Downloads a file from the given address and saves it in a local file.
            This is an async call.
            </summary>
            <param name="address">
            The uri of the file to download.
            </param>
            <param name="localFileName">
            The name of the local file the downloaded file should be saved as.
            </param>
        </member>
        <member name="M:Atom.AutoUpdate.Downloader.DownloadDataAsync(System.String)">
            <summary>
            Downloads a data from the given address and saves it in a local file.
            This is an async call.
            </summary>
            <param name="address">
            The uri of the data to download.
            </param>
        </member>
        <member name="M:Atom.AutoUpdate.Downloader.DownloadStringAsync(System.String)">
            <summary>
            Downloads a string from the given address and saves it in a local file.
            This is an async call.
            </summary>
            <param name="address">
            The uri of the data to download.
            </param>
        </member>
        <member name="F:Atom.AutoUpdate.Downloader.webClient">
            <summary>
            Provides methods to download files.
            </summary>
        </member>
        <member name="T:Atom.AutoUpdate.FileSystem">
            <summary>
            Provides access to the file system.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.FileSystem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FileSystem class.
            </summary>
            <param name="applicationDirectory">
            The base directory of the application.
            </param>
        </member>
        <member name="M:Atom.AutoUpdate.FileSystem.#ctor(System.String,Atom.AutoUpdate.IFileHasher)">
            <summary>
            Initializes a new instance of the FileSystem class.
            </summary>
            <param name="applicationDirectory">
            The base directory of the application.
            </param>
            <param name="fileHasher">
            Provides the mechanism that is used to hash
            the generate the hash of the files.
            </param>
        </member>
        <member name="M:Atom.AutoUpdate.FileSystem.GetFilesInDirectory(System.String)">
            <summary>
            Gets information about the files in the specified directory path.
            </summary>
            <param name="path">
            The path of the directory.
            </param>
            <returns>
            The files in the specified directory.
            </returns>
        </member>
        <member name="M:Atom.AutoUpdate.FileSystem.GetFile(System.String)">
            <summary>
            Gets information about the file at the specified full path.
            </summary>
            <param name="file">
            The full path of the file to get.
            </param>
            <returns>
            Information about the reqiested file encapsulated in an IManifestFile instance.
            </returns>
        </member>
        <member name="M:Atom.AutoUpdate.FileSystem.GetFileName(System.String)">
            <summary>
            Gets the file name associated with the given file.
            </summary>
            <param name="file">
            The full path of the file.
            </param>
            <returns>
            The filename including all application directories.
            </returns>
        </member>
        <member name="M:Atom.AutoUpdate.FileSystem.GetFileHash(System.IO.FileStream)">
            <summary>
            Gets the hash associated with the given file.
            </summary>
            <param name="fileStream">
            The file that has been loaden.
            </param>
            <returns>
            The hash.
            </returns>
        </member>
        <member name="F:Atom.AutoUpdate.FileSystem.fileHasher">
            <summary>
            Provides the mechanism that is used to hash
            the generate the hash of the files.
            </summary>
        </member>
        <member name="F:Atom.AutoUpdate.FileSystem.applicationDirectory">
            <summary>
            The base directory of the application.
            </summary>
        </member>
        <member name="T:Atom.AutoUpdate.IDownloader">
            <summary>
            Provides mechanisms to download files from the web.
            </summary>
        </member>
        <member name="E:Atom.AutoUpdate.IDownloader.AsyncStringDownloadCompleted">
            <summary>
            Occurs when an asynchronous string download operation completes.
            </summary>
        </member>
        <member name="E:Atom.AutoUpdate.IDownloader.AsyncDataDownloadCompleted">
            <summary>
            Occurs when an asynchronous data download operation completes.
            </summary>
        </member>
        <member name="E:Atom.AutoUpdate.IDownloader.AsyncDownloadCompleted">
            <summary>
            Occurs when an asynchronous file download operation completes.
            </summary>
        </member>
        <member name="E:Atom.AutoUpdate.IDownloader.AsyncDownloadProgressChanged">
            <summary>
            Occurs when an asynchronous download operation successfully transfers some
            or all of the data.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.IDownloader.DownloadData(System.String)">
            <summary>
            Downloads the data found at the given address.
            </summary>
            <param name="address">
            The uri of the data to download.
            </param>
            <returns>
            The downloaded data.
            </returns>
        </member>
        <member name="M:Atom.AutoUpdate.IDownloader.DownloadString(System.String)">
            <summary>
            Downloads the string found at the given address.
            </summary>
            <param name="address">
            The uri of the data to download.
            </param>
            <returns>
            The downloaded string.
            </returns>
        </member>
        <member name="M:Atom.AutoUpdate.IDownloader.DownloadFile(System.String,System.String)">
            <summary>
            Downloads a file from the given address and saves it in a local file.
            This is a blocking call.
            </summary>
            <param name="address">
            The uri of the file to download.
            </param>
            <param name="localFileName">
            The name of the local file the downloaded file should be saved as.
            </param>
        </member>
        <member name="M:Atom.AutoUpdate.IDownloader.DownloadFileAsync(System.String,System.String)">
            <summary>
            Downloads a file from the given address and saves it in a local file.
            This is an async call.
            </summary>
            <param name="address">
            The uri of the file to download.
            </param>
            <param name="localFileName">
            The name of the local file the downloaded file should be saved as.
            </param>
        </member>
        <member name="M:Atom.AutoUpdate.IDownloader.DownloadDataAsync(System.String)">
            <summary>
            Downloads a data from the given address and saves it in a local file.
            This is an async call.
            </summary>
            <param name="address">
            The uri of the data to download.
            </param>
        </member>
        <member name="M:Atom.AutoUpdate.IDownloader.DownloadStringAsync(System.String)">
            <summary>
            Downloads a string from the given address and saves it in a local file.
            This is an async call.
            </summary>
            <param name="address">
            The uri of the data to download.
            </param>
        </member>
        <member name="T:Atom.AutoUpdate.IFileHasher">
            <summary>
            Provides a mechanism that is used to calculate
            the hash code of a file.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.IFileHasher.GetHash(System.IO.Stream)">
            <summary>
            Calculates the hash-code for the specified Stream of bytes.
            </summary>
            <param name="stream">
            The input to calculate the hash for.
            </param>
            <returns>
            The calculated hash.
            </returns>
        </member>
        <member name="M:Atom.AutoUpdate.IFileHasher.GetHash(System.Byte[])">
            <summary>
            Calculates the hash-code for the specified bytes.
            </summary>
            <param name="bytes">
            The input to calculate the hash for.
            </param>
            <returns>
            The calculated hash.
            </returns>
        </member>
        <member name="T:Atom.AutoUpdate.IFileSystem">
            <summary>
            Provides access to the file system.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.IFileSystem.GetFilesInDirectory(System.String)">
            <summary>
            Gets information about the files in the specified directory path.
            </summary>
            <param name="path">
            The path of the directory.
            </param>
            <returns>
            The files in the specified directory.
            </returns>
        </member>
        <member name="T:Atom.AutoUpdate.Manifest.IManifest">
            <summary>
            Encapsultes the files of the application that are supposed to be updateable.
            </summary>
            <remarks>
            Manifests are usually stored on a web-server and downloaded to the client.
            </remarks>
        </member>
        <member name="P:Atom.AutoUpdate.Manifest.IManifest.Files">
            <summary>
            Gets the IManifestFileEntries that are part of this IManifest.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.Manifest.IManifest.AddFile(Atom.AutoUpdate.Manifest.IManifestFile)">
            <summary>
            Adds the specified <see cref="T:Atom.AutoUpdate.Manifest.IManifestFile"/> to this IManifest.
            </summary>
            <param name="entry">
            The entry to add.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If the specified <paramref name="entry"/> is null.
            </exception>
        </member>
        <member name="T:Atom.AutoUpdate.Manifest.IManifestBuilder">
            <summary>
            Provides a mechanism that makes it easier to
            create <see cref="T:Atom.AutoUpdate.Manifest.IManifest"/> instances.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.Manifest.IManifestBuilder.BuildFromDirectory(System.String)">
            <summary>
            Builds a new IManifest that includes all files
            the directory at the specified path contains.
            </summary>
            <param name="path">
            The path of the directory.
            </param>
            <returns>
            A new IManifest instance.
            </returns>
        </member>
        <member name="T:Atom.AutoUpdate.Manifest.IManifestFile">
            <summary>
            Specifies the data that is stored in an <see cref="T:Atom.AutoUpdate.Manifest.IManifest"/>
            descriping the properties required for updating a specific file of the application.
            </summary>
        </member>
        <member name="P:Atom.AutoUpdate.Manifest.IManifestFile.FileHash">
            <summary>
            Gets the hash of the file.
            </summary>
        </member>
        <member name="P:Atom.AutoUpdate.Manifest.IManifestFile.FileModificationTime">
            <summary>
            Gets the date and time the file was last modified.
            </summary>
        </member>
        <member name="P:Atom.AutoUpdate.Manifest.IManifestFile.FileName">
            <summary>
            Gets the full name of the file.
            </summary>
        </member>
        <member name="T:Atom.AutoUpdate.Manifest.Manifest">
            <summary>
            Encapsultes the state of the files of the application that are
            supposed to be updateable.
            </summary>
            <remarks>
            Manifests are usually stored on a web-server and downloaded to the client.
            </remarks>
        </member>
        <member name="P:Atom.AutoUpdate.Manifest.Manifest.Files">
            <summary>
            Gets the IManifestFileEntries that are part of this Manifest.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.Manifest.Manifest.AddFile(Atom.AutoUpdate.Manifest.IManifestFile)">
            <summary>
            Adds the specified <see cref="T:Atom.AutoUpdate.Manifest.IManifestFile"/> to this Manifest.
            </summary>
            <param name="entry">
            The entry to add.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If the specified <paramref name="entry"/> is null.
            </exception>
        </member>
        <member name="F:Atom.AutoUpdate.Manifest.Manifest.files">
            <summary>
            The files that are part of this Manifest.
            </summary>
        </member>
        <member name="T:Atom.AutoUpdate.Manifest.ManifestBuilder">
            <summary>
            Implements a mechanism that makes it easier to
            create <see cref="T:Atom.AutoUpdate.Manifest.IManifest"/> instances.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.Manifest.ManifestBuilder.#ctor(Atom.AutoUpdate.IFileSystem)">
            <summary>
            Initializes a new instance of the ManifestBuilder class.
            </summary>
            <param name="fileSystem">
            Provides access to the file-system.
            </param>
        </member>
        <member name="M:Atom.AutoUpdate.Manifest.ManifestBuilder.BuildFromDirectory(System.String)">
            <summary>
            Builds a new IManifest that includes all files
            the directory at the specified path contains.
            </summary>
            <param name="path">
            The path of the directory.
            </param>
            <returns>
            A new IManifest instance.
            </returns>
        </member>
        <member name="M:Atom.AutoUpdate.Manifest.ManifestBuilder.Build(Atom.AutoUpdate.Manifest.IManifestFile[])">
            <summary>
            Builds a new IManifest from the specified IManifestFiles.
            </summary>
            <param name="files">
            The input IManifestFiles.
            </param>
            <returns>
            A new IManifest instance.
            </returns>
        </member>
        <member name="F:Atom.AutoUpdate.Manifest.ManifestBuilder.fileSystem">
            <summary>
            Provides access to the file-system.
            </summary>
        </member>
        <member name="T:Atom.AutoUpdate.Manifest.ManifestFile">
            <summary>
            Specifies the data that is stored in an <see cref="T:Atom.AutoUpdate.Manifest.IManifest"/>
            descriping the properties required for updating a specific file of the application.
            </summary>
        </member>
        <member name="P:Atom.AutoUpdate.Manifest.ManifestFile.FileHash">
            <summary>
            Gets the hash of the file.
            </summary>
        </member>
        <member name="P:Atom.AutoUpdate.Manifest.ManifestFile.FileModificationTime">
            <summary>
            Gets the date and time the file was last modified.
            </summary>
        </member>
        <member name="P:Atom.AutoUpdate.Manifest.ManifestFile.FileName">
            <summary>
            Gets the full name of the file.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.Manifest.ManifestFile.#ctor(System.String,System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the ManifestFileEntry class.
            </summary>
            <param name="fileName">
            The full name of the file.
            </param>
            <param name="fileHash">
            The hash-code of the file.
            </param>
            <param name="fileModificationDateTime">
            The DateTime the file was last modified.
            </param>
        </member>
        <member name="F:Atom.AutoUpdate.Manifest.ManifestFile.fileHash">
            <summary>
            The hash-code of the file.
            </summary>
        </member>
        <member name="F:Atom.AutoUpdate.Manifest.ManifestFile.fileModificationDateTime">
            <summary>
             The DateTime the file was last modified.
            </summary>
        </member>
        <member name="F:Atom.AutoUpdate.Manifest.ManifestFile.fileName">
            <summary>
            The full name of the file.
            </summary>
        </member>
        <member name="T:Atom.AutoUpdate.Manifest.Serialization.BinaryManifestSerializer">
            <summary>
            Implements a mechanism that allows to de-/serializes an <see cref="T:Atom.AutoUpdate.Manifest.IManifest"/>
            from or into a binary format.
            </summary>
        </member>
        <member name="P:Atom.AutoUpdate.Manifest.Serialization.BinaryManifestSerializer.SerializeHash">
            <summary>
            Gets or sets a value indicating whether this BinaryManifestSerializer
            should include the hash-information when hashing.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.Manifest.Serialization.BinaryManifestSerializer.Serialize(Atom.AutoUpdate.Manifest.IManifest,System.IO.Stream)">
            <summary>
            Serializes the specified <see cref="T:Atom.AutoUpdate.Manifest.IManifest"/> into
            the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="manifest">
            The IManifest to serialize.
            </param>
            <param name="stream">
            The output stream to which should be written.
            </param>
        </member>
        <member name="M:Atom.AutoUpdate.Manifest.Serialization.BinaryManifestSerializer.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes an <see cref="T:Atom.AutoUpdate.Manifest.IManifest"/> instance from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">
            The input stream to read from.
            </param>
            <returns>
            The IManifest that has been deserialized.
            </returns>
        </member>
        <member name="M:Atom.AutoUpdate.Manifest.Serialization.BinaryManifestSerializer.GetHashType">
            <summary>
            Gets a string that uniquely identifies the hashing-algorithm used by the BinaryManifestSerializer.
            </summary>
            <returns>
            The string written to the Manifest.
            </returns>
        </member>
        <member name="T:Atom.AutoUpdate.Manifest.Serialization.IManifestSerializer">
            <summary>
            Implements a mechanism that allow to de-/serializes an <see cref="T:Atom.AutoUpdate.Manifest.IManifest"/>.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.Manifest.Serialization.IManifestSerializer.Serialize(Atom.AutoUpdate.Manifest.IManifest,System.IO.Stream)">
            <summary>
            Serializes the specified <see cref="T:Atom.AutoUpdate.Manifest.IManifest"/> into
            the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="manifest">
            The IManifest to serialize.
            </param>
            <param name="stream">
            The output stream to which should be written.
            </param>
        </member>
        <member name="M:Atom.AutoUpdate.Manifest.Serialization.IManifestSerializer.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes an <see cref="T:Atom.AutoUpdate.Manifest.IManifest"/> instance from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">
            The input stream to read from.
            </param>
            <returns>
            The IManifest that has been deserialized.
            </returns>
        </member>
        <member name="T:Atom.AutoUpdate.MD5FileHasher">
            <summary>
            Implements a mechanism that is used to calculate
            the hash code of a file using the MD5 algorithm.
            </summary>
        </member>
        <member name="M:Atom.AutoUpdate.MD5FileHasher.GetHash(System.IO.Stream)">
            <summary>
            Calculates the hash-code for the specified Stream of bytes.
            </summary>
            <param name="stream">
            The input to calculate the hash for.
            </param>
            <returns>
            The calculated hash.
            </returns>
        </member>
        <member name="M:Atom.AutoUpdate.MD5FileHasher.GetHash(System.Byte[])">
            <summary>
            Calculates the hash-code for the specified bytes.
            </summary>
            <param name="bytes">
            The input to calculate the hash for.
            </param>
            <returns>
            The calculated hash.
            </returns>
        </member>
        <member name="F:Atom.AutoUpdate.MD5FileHasher.md5">
            <summary>
            The MD5 hashing service provided by .net.
            </summary>
        </member>
        <member name="T:Atom.ReflectionExtensions">
            <summary>
            Provides reflection related extension methods.
            </summary>
            <remarks>
            This class has been pulled from Atom.dll.
            </remarks>
        </member>
        <member name="M:Atom.ReflectionExtensions.GetTypeName(System.Type)">
            <summary>
            Receives the type name of the given <see cref="T:System.Type"/>,
            aka. "FullName, AssemblyName". Which can be used to create
            the given type using "Activator.CreateInstance( Type.GetType( typeName ) )"
            in the case that the type has a paramterless public constructor.
            </summary>
            <param name="type">
            The type for which to get the typename for.
            </param>
            <returns>
            The typename that uniquely identifies the given <paramref name="type"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="type"/> is null.
            </exception>
        </member>
    </members>
</doc>
